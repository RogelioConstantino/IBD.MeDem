//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IBD.MEDEM.Data
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using IBD.MEDEM.Entities;
    
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class IBDMedem : DbContext
    {
        public IBDMedem()
            : base("name=IBDMedem")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Ciudades> Ciudades { get; set; }
        public virtual DbSet<ClientePuntosCarga> ClientePuntosCarga { get; set; }
        public virtual DbSet<Clientes> Clientes { get; set; }
        public virtual DbSet<Comentarios> Comentarios { get; set; }
        public virtual DbSet<ComentariosOrigen> ComentariosOrigen { get; set; }
        public virtual DbSet<Contactos> Contactos { get; set; }
        public virtual DbSet<ContactoTelefonos> ContactoTelefonos { get; set; }
        public virtual DbSet<Direcciones> Direcciones { get; set; }
        public virtual DbSet<Documentos> Documentos { get; set; }
        public virtual DbSet<Estados> Estados { get; set; }
        public virtual DbSet<EstatusFases> EstatusFases { get; set; }
        public virtual DbSet<Fases> Fases { get; set; }
        public virtual DbSet<GrupoCancelacienes> GrupoCancelacienes { get; set; }
        public virtual DbSet<Grupos> Grupos { get; set; }
        public virtual DbSet<Municipios> Municipios { get; set; }
        public virtual DbSet<PoblacionesLocalidades> PoblacionesLocalidades { get; set; }
        public virtual DbSet<TiposDocumentos> TiposDocumentos { get; set; }
        public virtual DbSet<TiposGiros> TiposGiros { get; set; }
    
        public virtual ObjectResult<ObtenerGrupos> ObtenerGrupos(Nullable<int> idProducto, string idNoTarjeta, Nullable<System.DateTime> fechaIni, Nullable<System.DateTime> fechaFin)
        {
            var idProductoParameter = idProducto.HasValue ?
                new ObjectParameter("idProducto", idProducto) :
                new ObjectParameter("idProducto", typeof(int));
    
            var idNoTarjetaParameter = idNoTarjeta != null ?
                new ObjectParameter("idNoTarjeta", idNoTarjeta) :
                new ObjectParameter("idNoTarjeta", typeof(string));
    
            var fechaIniParameter = fechaIni.HasValue ?
                new ObjectParameter("FechaIni", fechaIni) :
                new ObjectParameter("FechaIni", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObtenerGrupos>("ObtenerGrupos", idProductoParameter, idNoTarjetaParameter, fechaIniParameter, fechaFinParameter);
        }
    }
}
